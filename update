# ─────────────────────────────────────────────────── #
#                    ██ ▄█▀  ██████                   #
#                    ██▄█▒ ▒██    ▒                   #
#                   ▓███▄░ ░ ▓██▄                     #
#                   ▓██ █▄   ▒   ██▒                  #
#                   ▒██▒ █▄▒██████▒▒                  #
#                   ▒ ▒▒ ▓▒▒ ▒▓▒ ▒ ░                  #
#                   ░ ░▒ ▒░░ ░▒  ░ ░                  #
#                   ░ ░░ ░ ░  ░  ░                    #
#                   ░  ░         ░                    #
# ─────────────────────────────────────────────────── #
options:
#	Nome: KhSkins | Autor: Kick Holse
	version: 1.0

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# events

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# commands
command skin [<text>]:
	trigger:
		arg 1 is not set:
			khskins_getStats(player)
			set {_skins::*} to skutil yaml list "%uuid of player%.skins" from file "plugins/KhSkins/players/%player%.yml"
			khskins_paggedMenu(player, {_skins::*})
		arg 1 is set
		arg 1 is "help" or "ajuda":
			send "%nl%  &eAjuda - Skin 1/1%nl% "
			send " &3/skin atualizar &f- &7Retomar skin original da sua conta"
			send " &3/skin <jogador> &f- &7Utilizar a skin de outro jogador%nl% "
		else if arg 1 is "update" or "atualizar":
			close player's inventory
			send "&aSua skin foi atualizada com sucesso."
			make console execute command "sr set %player% %player%"
			set yaml value "%uuid of player%.selected" of file "plugins/KhSkins/players/%player%.yml" to uuid of player
		else if khskins_verifyPlayer(arg 1 parsed as offlineplayer) is true:
			set {_player} to khskins_getPlayerName(arg 1 parsed as offlineplayer) parsed as offlineplayer
			send "&aSua skin foi alterada para %{_player}%"
			make console execute command "sr set %player% %{_player}%"
			set yaml value "%uuid of player%.selected" of file "plugins/KhSkins/players/%player%.yml" to uuid of {_player}
			khcore_listContains(yaml list "%uuid of player%.skins" from file "plugins/KhSkins/players/%player%.yml", uuid of {_player}) is not true:
				add uuid of {_player} to yaml list "%uuid of player%.skins" from file "plugins/KhSkins/players/%player%.yml"
		else:
			send "&cNão encontramos nenhum jogador com este nick."
		
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# filemanager
function khskins_filemanager():
	khcore downgit "KhSkins/language.yml" "https://raw.githubusercontent.com/KickHolse/KhKits/master/files/locations"
	loop currently loaded yaml files:
		loop-value contains "khskins.language"
		unload yaml loop-value
	load yaml "plugins/KhSkins/language.yml" as "khskins.language"

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# functions
function khskins_paggedMenu(p: player, var: objects, page: number = 0):
	set {_pageStart} to 21*{_page}
	set {_i} to 1
	set {_slot} to 10
	open chest inventory with 6 rows named "Skins" to {_p}
	wait a tick
	loop skutil yaml nodes "menu.items" from file "plugins/KhSkins/language.yml":
		set {_item} to yaml value "menu.items.%loop-value%.icon" from "khskins.language"
		set {_lore} to khcore_getLore(yaml value "menu.items.%loop-value%.icon" from "khskins.language")
		{_item} contains "{value}":
			set {_o} to yaml value "menu.items.%loop-value%.ownerid" from "khskins.language"
			set {_v} to yaml value "menu.items.%loop-value%.value" from "khskins.language"
			replace "{value}" with "%{_o}%:%{_v}%" in {_item}
		set {_item} to khcore_getItem({_item})
		set {_cmd} to yaml value "menu.items.%loop-value%.execute" from "khskins.language"
		make a gui slot yaml value "menu.items.%loop-value%.slot" from "khskins.language" of {_p} with {_item} without nbt named khcore_getName(yaml value "menu.items.%loop-value%.icon" from "khskins.language") with lore {_lore} to run:
			khskins_ext({_p}, {_cmd})
	loop {_var::*}:
		(loop-index parsed as integer) > {_pageStart}
		set {_loop} to loop-value
		set {_name} to "%loop-value%" parsed as offlineplayer
		set {_lore} to "&7Passeie pelos nossos lobbies||&7utilizando a skin de %{_name}%.||||&eClique direito para remover.||{state}"
		yml value "%uuid of {_p}%.selected" from file "plugins/KhSkins/players/%{_p}%.yml" is loop-value:
			replace "{state}" with "&6Selecionado." in {_lore}
		replace "{state}" with "&eClique para selecionar." in {_lore}
		make a gui slot {_slot} of {_p} with skull of "%loop-value%" parsed as offlineplayer without nbt named "&a%{_name}%" with lore {_lore} to run:
			"%click type%" contains "RIGHT":
				{_loop} is not {_p}'s displayname
				yml value "%uuid of {_p}%.selected" from file "plugins/KhSkins/players/%{_p}%.yml" is {_loop}:
					make {_p} execute command "skin %{_p}'s displayname%"
				remove {_loop} from yaml list "%uuid of {_p}%.skins" from file "plugins/KhSkins/players/%{_p}%.yml"
				make {_p} execute command "skin"
			else:
				make {_p} execute command "skin %{_loop} parsed as offlineplayer%"
				close {_p}'s inventory
		add 1 to {_slot}
		{_slot} is 17 or 26:
			add 2 to {_slot}
		if {_slot} = ((35*{_i})):
			exit loop
	if (amount of {_var::*}) > {_pageStart} + 21:
		make a gui slot 26 of {_p} with arrow named "&aPróxima página" with lore "&7Ir para a página %{_page} + 1 + 1%." to run:
			khskins_paggedMenu({_p}, {_var::*}, ({_page} + 1))
	if {_page} > 0:
		make a gui slot 18 of {_p} with arrow named "&aPágina anterior" with lore "&7Voltar à página %{_page} + 1 - 1%." to run:
			khskins_paggedMenu({_p}, {_var::*}, ({_page} - 1))
function khskins_getStats(p: player):
	file "plugins/KhSkins/players/%{_p}%.yml" doesn't exist:
		create file "plugins/KhSkins/players/%{_p}%.yml"
		set yml value "%uuid of {_p}%.name" of file "plugins/KhSkins/players/%{_p}%.yml" to {_p}'s displayname
		set yml value "%uuid of {_p}%.selected" of file "plugins/KhSkins/players/%{_p}%.yml" to uuid of {_p}
		add uuid of {_p} to yaml list "%uuid of {_p}%.skins" from file "plugins/KhSkins/players/%{_p}%.yml"
function khskins_ext(p: player, cmd: text):
	{_cmd} contains "SKIN>":
		set {_temp::*} to {_cmd} split at "SKIN>"
		make {_p} execute command "skin %{_temp::2}%"
		close {_p}'s inventory
	{_cmd} contains "NONE":
		khcore_playSound({_p}, ENDERMAN_TELEPORT, 1, 5)
function khskins_getPlayerName(p: offlineplayer) :: text:
	set {_x::*} to text from "https://api.mojang.com/users/profiles/minecraft/%{_p}%" split at """"
	return {_x::4}
function khskins_verifyPlayer(p: offlineplayer) :: boolean:
	text from "https://api.mojang.com/users/profiles/minecraft/%{_p}%" is "":
		return false
	else:
		return true

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# load
load:
	khskins_filemanager()
	delete {khskins::check_update}
	wait 1 second
	text from "https://api.spigotmc.org/legacy/update.php?resource=68835" != "{@version}":
		set {khskins::check_update} to true
		send "&3[KHSKINS] &cYou are not using the latest version of skript" to console
	else:
		send "&3[KHSKINS] &aYou are using the latest version of skript" to console
	send "&3[KHSKINS] &aKhSkins &8v{@version} &aenabled!" to console
